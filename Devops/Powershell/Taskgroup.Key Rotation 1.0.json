{"tasks":[{"environment":{},"displayName":"Replace Dynamic variables in config file","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","ScriptType":"InlineScript","ScriptPath":"","Inline":"# Privitar Config File\n\n((Get-Content -path $(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\$(privitarConfigPath) -Raw) -replace '{Environment}',\"$(Environment)\") | Set-Content -Path $(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\$(privitarConfigPath)\n\n# IDS Rotation Config File\n\n((Get-Content -path $(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\config\\secrets_config.ini -Raw) -replace '{usecase}',\"$(usecase)\") | Set-Content -Path $(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\config\\secrets_config.ini\n\n((Get-Content -path $(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\config\\secrets_config.ini -Raw) -replace '{env}',\"$(env)\") | Set-Content -Path $(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\config\\secrets_config.ini","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""},"task":{"id":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","versionSpec":"4.*","definitionType":"task"}},{"environment":{},"displayName":"Install Python","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"version":"python==3.7.0","prerelease":"false","dependencies":"$(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\$(packagePath) --upgrade pip","outputdir":"$(Agent.ToolsDirectory)\\PythonNuget","nuGetAdditionalArgs":""},"task":{"id":"6095fbbe-853d-4f2e-bc15-a88c92a78b4d","versionSpec":"1.*","definitionType":"task"}},{"environment":{},"displayName":"Initialize Privitar Pipeline Variables","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"scriptSource":"inline","scriptPath":"$(System.DefaultWorkingDirectory)/$(Build.DefinitionName)/scripts/init_pipeline_variables.py","script":"import sys\nfrom src.adf.adf_components import Config\n\nlocal_path, file_path = sys.argv[1], sys.argv[2] \nusecase, env = sys.argv[3], sys.argv[4]\n\nConfig(local_path+file_path).init_param()\nConfig(local_path+file_path,usecase=usecase,env=env).init_param()","arguments":"$(System.DefaultWorkingDirectory) \\$(Build.DefinitionName)\\$(privitarConfigPath) $(usecase) $(env)","pythonInterpreter":"","workingDirectory":"$(System.DefaultWorkingDirectory)","failOnStderr":"true"},"task":{"id":"6392f95f-7e76-4a18-b3c7-7f078d2f7700","versionSpec":"0.*","definitionType":"task"}},{"environment":{},"displayName":"Initialize Secrets Pipeline Variables","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"scriptSource":"inline","scriptPath":"$(System.DefaultWorkingDirectory)/$(Build.DefinitionName)/scripts/init_pipeline_variables.py","script":"import sys\nfrom src.adf.adf_components import Config\n\nlocal_path, file_path = sys.argv[1], sys.argv[2] \n\nConfig(local_path+file_path).init_param()","arguments":"$(System.DefaultWorkingDirectory) \\$(Build.DefinitionName)\\$(secretsConfigPath)","pythonInterpreter":"","workingDirectory":"$(System.DefaultWorkingDirectory)","failOnStderr":"true"},"task":{"id":"6392f95f-7e76-4a18-b3c7-7f078d2f7700","versionSpec":"0.*","definitionType":"task"}},{"environment":{},"displayName":"Update Service Principal Credentials","alwaysRun":false,"continueOnError":false,"condition":"and(succeeded(), eq(variables.ResetServicePrincipal, 'True'))","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","Action":"update","SpName":"$(ServicePrincipalName)","removeConfirmation":"false","removeConfirmationPublicClient":"false","KeyVaultName":"$(KeyVaultName)","GenerateCertificate":"false","ExplicitlySpecifySecretNames":"true","SpPasswordIdentifier":"$(SpPwd)","SpObjectIdIdentifier":"$(SpObjectId)","SpApplicationIdIdentifier":"$(SpApplicationId)","SpCertificateName":"$(SpCertificateId)","SpCertificatePasswordIdentifier":"$(SpCertificatePwd)","ServiceConnectionNameSuffix":"","SpecifyAzureDevOpsOrganization":"false","AzureDevOpsOrganization":"","AzureDevOpsProjectName":"","AzureDevOpsPAT":"","SpecifySubscription":"false","SubscriptionId":"$(SubscriptionId)","ScopeToResourceGroup":"true","ScopeResourceGroupName":"$(ResourceGroupName)","RequestAppPermissions":"false","AppPermissions":"Microsoft Graph:\n- Directory.Read.All\n- Application.ReadWrite.OwnedBy\nAzure AD:\n- Directory.Read.All\n- Application.ReadWrite.OwnedBy","RequestDelegatedPermissions":"false","DelegatedPermissions":"","EmailAddressApiPermissions":"","IncludeSecurityGroupsInToken":"false","EnableAzureAdSso":"false","RedirectURLs":"","SupportedAccountTypes":"AzureADMyOrg","AddApiScope":"false","ApiScopes":"user_impersonation:\n  ConsentDisplayName: Access Service Principal\n  ConsentDescription: Allow the application to access the Service Principal on behalf of the signed-in user.","ConfigureAppRoles":"false","AppRolesJson":"[\n  {\n    \"id\": \"43b7b559-60b2-4d14-928a-589dc88e65f3\",\n    \"value\": \"Role1\",\n    \"displayName\": \"Display Name\",\n    \"allowedMemberTypes\": [\n      \"User\",\n      \"Application\"\n    ],\n    \"description\": \"Do not forget to update all example values. Especially the GUID!\",\n    \"isEnabled\": true\n  }\n]","AppRoleAssignmentRequired":"true","RequestDelegatedPermissionsPublicClient":"false","DelegatedPermissionsPublicClient":"","EmailAddressPublicClient":"","AppRoleAssignmentValue":"","AppRoleAssignmentSecurityPrincipalType":"","AppRoleAssignmentGroupName":"","AppRoleAssignmentServicePrincipalObjectId":""},"task":{"id":"7cd3b490-1755-46a2-87b4-0f8cb9e3588a","versionSpec":"3.*","definitionType":"task"}},{"environment":{},"displayName":"Regenerate ADLS Gen2 Storage Account Access Primary Key ","alwaysRun":false,"continueOnError":false,"condition":"and(succeeded(), eq(variables.ResetStorageAccount, 'True'))","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","resourceGroupName":"$(ResourceGroupName)","storageAccountName":"$(StorageAccountNameAdlsGen2)","action":"regenerateKey","removeConfirmation":"false","location":"westeurope","storageKind":"StorageV2","storageSku":"Standard_GRS","enableStaticWebsite":"false","indexDocumentName":"","errorDocumentPath":"","defaultAclAction":"Deny","addStandardIPRanges":"true","addAdditionalIPRanges":"false","additionalIPRanges":"","allowTrustedAzureServices":"false","allowVNetServiceEndpoints":"false","allowedSubnetResourceIds":"","enableAdvancedThreatProtection":"true","analyticsRetentionDays":"30","enableSoftDelete":"true","softDeleteRetentionDays":"30","containersToCreate":"","containersToRemove":"","keyToRegenerate":"key1","keyRegenerationConfirmation":"true","roleName":"","securityPrincipalType":"","groupName":"","servicePrincipalObjectId":"","deploymentDebugLevel":"None"},"task":{"id":"ca74b6c0-23e7-44a8-863d-21695197c48c","versionSpec":"3.*","definitionType":"task"}},{"environment":{},"displayName":"Regenerate Blob Storage Account Access Primary Key","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","resourceGroupName":"$(ResourceGroupName)","storageAccountName":"$(StorageAccountName)","action":"regenerateKey","removeConfirmation":"false","location":"westeurope","storageKind":"StorageV2","storageSku":"Standard_GRS","enableStaticWebsite":"false","indexDocumentName":"","errorDocumentPath":"","defaultAclAction":"Deny","addStandardIPRanges":"true","addAdditionalIPRanges":"false","additionalIPRanges":"","allowTrustedAzureServices":"false","allowVNetServiceEndpoints":"false","allowedSubnetResourceIds":"","enableAdvancedThreatProtection":"true","analyticsRetentionDays":"30","enableSoftDelete":"true","softDeleteRetentionDays":"30","containersToCreate":"","containersToRemove":"","keyToRegenerate":"key1","keyRegenerationConfirmation":"true","roleName":"","securityPrincipalType":"","groupName":"","servicePrincipalObjectId":"","deploymentDebugLevel":"None"},"task":{"id":"ca74b6c0-23e7-44a8-863d-21695197c48c","versionSpec":"3.*","definitionType":"task"}},{"environment":{},"displayName":"Get Service Principal Credentials","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.KeyVault -Force\n\n$ServicePrincipalId = Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $(SpApplicationId)\n$ServicePrincipalId = $ServicePrincipalId.SecretValueText\nwrite-host \"##vso[task.setvariable variable=ServicePrincipalId]$ServicePrincipalId\"\n\n$ServicePrincipalPwd = Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $(SpPwd)\n$ServicePrincipalPwd = $ServicePrincipalPwd.SecretValueText\nwrite-host \"##vso[task.setvariable variable=ServicePrincipalPwd]$ServicePrincipalPwd\"\n\n\n$ServicePrincipalObjectId = Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $(SpObjectId)\n$ServicePrincipalObjectId = $ServicePrincipalId.SecretValueText\nwrite-host \"##vso[task.setvariable variable=ServicePrincipalObjectId]$ServicePrincipalObjectId\"\n\n# ADLS Gen2 Key : mpdm-privitar-{env}-01-adls2-key\n$sa_key_secret_value= Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $(sa_key_secret_name)\n$sa_key_secret_value = $sa_key_secret_value.SecretValueText\nwrite-host \"##vso[task.setvariable variable=sa_key_secret_value]$sa_key_secret_value\"\n\n# Databricks Token  \n$adb_token_secret_value= Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $(adb_token_secret_name)\n$adb_token_secret_value= $adb_token_secret_value.SecretValueText\nwrite-host \"##vso[task.setvariable variable=adb_token_secret_value]$adb_token_secret_value\"\n\n# Get Subscription ID\n$Context = Get-AzContext\n$SubscriptionId = $Context.Subscription.Id\nwrite-host \"##vso[task.setvariable variable=SubscriptionId]$SubscriptionId\"\n\n# Get Tenant ID\n$tenantId = $Context.Subscription.TenantId\nwrite-host \"##vso[task.setvariable variable=tenantId]$tenantId\"","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"true","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""},"task":{"id":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","versionSpec":"4.*","definitionType":"task"}},{"environment":{},"displayName":"Databricks Bearer Token","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"applicationId":"$(ServicePrincipalId)","spSecret":"$(ServicePrincipalPwd)","resourceGroup":"$(ResourceGroupName)","workspace":"$(DatabricksWorkspace)","subscriptionId":"$(SubscriptionId)","tenantId":"$(tenantId)","region":"westeurope"},"task":{"id":"e1a556ad-b8a0-4f74-8486-c6e9d321fd9f","versionSpec":"0.*","definitionType":"task"}},{"environment":{},"displayName":"Store Databricks Token to the key vault","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","ScriptType":"InlineScript","ScriptPath":"","Inline":"Write-Host \"Store Databricks Bearer token to $(KeyVaultName)\"\n$DatabricksSecretName = '$(adb_token_secret_name)'\n$CurrentToken  = (Get-AzKeyVaultSecret -VaultName \"$(KeyVaultName)\" -Name \"$DatabricksSecretName\").SecretValueText\n\n$Secret = ConvertTo-SecureString -String '$(BearerToken)' -AsPlainText -Force\n    Set-AzKeyVaultSecret -VaultName '$(KeyVaultName)' -Name \"$DatabricksSecretName\" -SecretValue $Secret -ContentType \"Databricks Access Token\" -Expires (Get-Date).AddMonths($(adb_token_expiry_months))","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""},"task":{"id":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","versionSpec":"5.*","definitionType":"task"}},{"environment":{},"displayName":"Create or Update  ADLS Gen2 Storage Account Secret in Key Vault","alwaysRun":false,"continueOnError":false,"condition":"and(succeeded(), eq(variables.ResetStorageAccount, 'True'))","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","ScriptType":"FilePath","ScriptPath":"$(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\$(scriptConfigPath)\\CreateOrUpdateStorageAccountSecret.ps1","Inline":"","ScriptArguments":"-ResourceGroupName $(ResourceGroupName) -StorageAccountName $(StorageAccountNameAdlsGen2) -KeyVaultName $(KeyVaultName) -StorageAccountSecretName $(sa_key_secret_name) -Expiry_Days $(sa_key_expiry_days)","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""},"task":{"id":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","versionSpec":"4.*","definitionType":"task"}},{"environment":{},"displayName":"Create or Update Blob  Storage Account Secret in Key Vault","alwaysRun":false,"continueOnError":false,"condition":"and(succeeded(), eq(variables.ResetStorageAccount, 'True'))","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","ScriptType":"FilePath","ScriptPath":"$(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\$(scriptConfigPath)\\CreateOrUpdateStorageAccountSecret.ps1","Inline":"","ScriptArguments":"-ResourceGroupName $(ResourceGroupName) -StorageAccountName $(StorageAccountName) -KeyVaultName $(KeyVaultName) -StorageAccountSecretName $(sa_blob_secret_name) -Expiry_Days $(sa_key_expiry_days)","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""},"task":{"id":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","versionSpec":"4.*","definitionType":"task"}},{"environment":{},"displayName":"Create or Update ADF LinkedServices","alwaysRun":false,"continueOnError":false,"condition":"and(succeeded(), eq(variables.ResetDFLinkedServices, 'True'))","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","ScriptType":"FilePath","ScriptPath":"$(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\$(scriptConfigPath)\\CreateOrUpdateLinkedServices.ps1","Inline":"# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments","ScriptArguments":"-TenantId $(tenantId) -ServicePrincipalAppId $(ServicePrincipalId) -ServicePrincipalPasswd '$(ServicePrincipalPwd)' -SubscriptionId $(SubscriptionId) -ResourceGroupName $(ResourceGroupName) -DataFactoryName $(DataFactoryName) -Usecase $(usecase) -Env $(env) -StorageAccountName $(StorageAccountName)  -ADBTokenValueName  $(adb_token_secret_name) -ExistingClusterId $(db_cluster_id) -KeyVaultName $(KeyVaultName) -adlsgen1linkedservicename $(adlsgen1linkedservicename) -adlsgen2linkedservicename $(adlsgen2linkedservicename) -adbjobclusterlinkedservicename $(adbjobclusterlinkedservicename) -adbinteractiveclusterlinkedservicename $(adbinteractiveclusterlinkedservicename) -blobstoragelinkedservicename $(blobstoragelinkedservicename)","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""},"task":{"id":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","versionSpec":"4.*","definitionType":"task"}},{"environment":{},"displayName":"Create or Update ADB Scope Secrets","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"inputs":{"ConnectedServiceNameARM":"$(ServiceConnection)","ScriptType":"FilePath","ScriptPath":"$(System.DefaultWorkingDirectory)\\$(Build.DefinitionName)\\$(scriptConfigPath)\\Copy-AzKeyVaultSecretsToDatabricks.ps1","Inline":"# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments","ScriptArguments":"-KeyVaultName $(KeyVaultName) -DatabricksAccessTokenSecret $(adb_token_secret_name) -DatabricksScopeName $(adb_secret_scope_name) -Verbose","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""},"task":{"id":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","versionSpec":"4.*","definitionType":"task"}}],"runsOn":["Agent","DeploymentGroup"],"revision":94,"createdBy":{"displayName":"Sagar Lad","id":"2ab7979e-3515-6eec-8635-3db7bfe88ad5","uniqueName":"sagar.lad@nl.sagarlad.com"},"createdOn":"2020-03-19T08:15:00.443Z","modifiedBy":{"displayName":"Sagar Lad","id":"2ab7979e-3515-6eec-8635-3db7bfe88ad5","uniqueName":"sagar.lad@nl.sagarlad.com"},"modifiedOn":"2020-11-10T10:42:14.490Z","comment":"","id":"9d5db7e6-ef96-43ed-97b6-1fc31779f772","name":"sagarlad.Taskgroup.DIALConsuming.Key Rotation Privitar 1.0","version":{"major":1,"minor":0,"patch":0,"isTest":false},"iconUrl":"https://cdn.vsassets.io/v/M162_20200114.3/_content/icon-meta-task.png","friendlyName":"sagarlad.Taskgroup.DIALConsuming.Key Rotation Privitar 1.0","description":"Privitart Deployment - Key Rotation","category":"Deploy","definitionType":"metaTask","author":"Sagar Lad","demands":[],"groups":[],"inputs":[{"aliases":[],"options":{},"properties":{},"name":"adb_secret_scope_name","label":"adb_secret_scope_name","defaultValue":"$(adb_secret_scope_name)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"adb_token_expiry_months","label":"adb_token_expiry_months","defaultValue":"","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"adb_token_secret_name","label":"adb_token_secret_name","defaultValue":"$(adb_token_secret_name)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"adbinteractiveclusterlinkedservicename","label":"adbinteractiveclusterlinkedservicename","defaultValue":"$(adbinteractiveclusterlinkedservicename)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"adbjobclusterlinkedservicename","label":"adbjobclusterlinkedservicename","defaultValue":"$(adbjobclusterlinkedservicename)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"adlsgen1linkedservicename","label":"adlsgen1linkedservicename","defaultValue":"$(adlsgen1linkedservicename)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"adlsgen2linkedservicename","label":"adlsgen2linkedservicename","defaultValue":"$(adlsgen2linkedservicename)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"BearerToken","label":"BearerToken","defaultValue":"","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"blobstoragelinkedservicename","label":"blobstoragelinkedservicename","defaultValue":"$(blobstoragelinkedservicename)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"DatabricksWorkspace","label":"DatabricksWorkspace","defaultValue":"","required":true,"type":"string","helpMarkDown":"Databricks Workspace Name (as shown in Azure Portal)","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"DataFactoryName","label":"DataFactoryName","defaultValue":"$(DataFactoryName)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"db_cluster_id","label":"db_cluster_id","defaultValue":"$(db_cluster_id)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"env","label":"env","defaultValue":"$(env)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"Environment","label":"Environment","defaultValue":"","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"KeyVaultName","label":"KeyVaultName","defaultValue":"$(keyVaultName)","required":true,"type":"string","helpMarkDown":"Enter the name of an existing Key Vault to use for storing/fetching/updating the credentials of the Service Principal as secrets.\n\nThe Azure DevOps service endpoint used for this task must have list/get/set/delete secrets permissions on this Key Vault. And also list/get/create/update/delete certificates permissions in case the certificate option is checked below.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"packagePath","label":"packagePath","defaultValue":"$(packagePath)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"privitarConfigPath","label":"privitarConfigPath","defaultValue":"","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"ResourceGroupName","label":"ResourceGroupName","defaultValue":"$(ResourceGroupName)","required":true,"type":"string","helpMarkDown":"Enter the name of the desired Resource Group.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"sa_blob_secret_name","label":"sa_blob_secret_name","defaultValue":"","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"sa_key_expiry_days","label":"sa_key_expiry_days","defaultValue":"$(sa_key_expiry_days)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"sa_key_secret_name","label":"sa_key_secret_name","defaultValue":"$(sa_key_secret_name)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"scriptConfigPath","label":"scriptConfigPath","defaultValue":"$(scriptConfigPath)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"secretsConfigPath","label":"secretsConfigPath","defaultValue":"$(secretsConfigPath)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{"EndpointFilterRule":"ScopeLevel != AzureMLWorkspace"},"name":"ServiceConnection","label":"ServiceConnection","defaultValue":"$(ServiceConnection)","required":true,"type":"connectedService:AzureRM","helpMarkDown":"Azure Resource Manager subscription to configure before running PowerShell","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"ServicePrincipalId","label":"ServicePrincipalId","defaultValue":"$(ServicePrincipalId)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"ServicePrincipalName","label":"ServicePrincipalName","defaultValue":"$(ServicePrincipalName)","required":true,"type":"string","helpMarkDown":"Enter the display name of the Azure AD Service Principal you wish to create, update or delete. It should be unique within the Azure AD tenant. It is also used for the Azure AD application registration that is created.\n\nThe value must only contain must only contain alphanumeric characters and dashes, so no spaces, and cannot start with a number. The name must be between 8-245 characters long.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"ServicePrincipalPwd","label":"ServicePrincipalPwd","defaultValue":"$(ServicePrincipalPwd)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"SpApplicationId","label":"SpApplicationId","defaultValue":"$(SpApplicationId)","required":true,"type":"string","helpMarkDown":"Enter the name of the secret in Azure Key Vault that holds the application id for the service principal.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"SpObjectId","label":"SpObjectId","defaultValue":"$(SpObjectId)","required":true,"type":"string","helpMarkDown":"Enter the name of the secret in Azure Key Vault that holds the object id of the service principal object in Azure AD.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"SpPwd","label":"SpPwd","defaultValue":"$(SpPwd)","required":true,"type":"string","helpMarkDown":"Enter the name of the secret in Azure Key Vault that holds the password credential of the service principal.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"StorageAccountName","label":"StorageAccountName","defaultValue":"$(StorageAccountName)","required":true,"type":"string","helpMarkDown":"The name of the Storage account.\n\nThis name must:\n* Be globally unique.\n* Be between 3 and 24 characters long.\n* Only contain lowercase letters and numbers.\n* Start with a letter.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"StorageAccountNameAdlsGen2","label":"StorageAccountNameAdlsGen2","defaultValue":"","required":true,"type":"string","helpMarkDown":"The name of the Storage account.\n\nThis name must:\n* Be globally unique.\n* Be between 3 and 24 characters long.\n* Only contain lowercase letters and numbers.\n* Start with a letter.","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"SubscriptionId","label":"SubscriptionId","defaultValue":"$(SubscriptionId)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"tenantId","label":"tenantId","defaultValue":"$(tenantId)","required":true,"type":"string","helpMarkDown":"","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"usecase","label":"usecase","defaultValue":"$(usecase)","required":true,"type":"string","helpMarkDown":"","groupName":""}],"satisfies":[],"sourceDefinitions":[],"dataSourceBindings":[],"instanceNameFormat":"Task group: sagarlad.Taskgroup.DIALConsuming.Key Rotation Privitar 1.0 $(adb_secret_scope_name)","preJobExecution":{},"execution":{},"postJobExecution":{}}